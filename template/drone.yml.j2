services:
  drone:
    container_name: drone
    image: drone/drone:1.10.1
    restart: unless-stopped
    environment:
      - DRONE_DATABASE_DRIVER=sqlite3
      - DRONE_DATABASE_DATASOURCE=/data/database.sqlite
      - DRONE_GIT_ALWAYS_AUTH=false
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_SERVER_PROTO=https
      - DRONE_SERVER_HOST=drone.{{ domain }}
      - DRONE_TLS_AUTOCERT=false
      - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET}
      - DRONE_USER_CREATE=username:${DRONE_ADMIN_USER},machine:false,admin:true
    ports:
      - "3001:80"
      - "9001:9000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.drawio.rule=Host(`drone.{{ domain }}`)"
      - "traefik.http.routers.drawio.entrypoints=websecure"
      - "traefik.http.routers.drawio.tls.certresolver=myresolver"
      - "traefik.http.services.drawio.loadbalancer.server.port=80"
    networks:
      - traefik_reverse_proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./drone:/data

  drone-runner:
    container_name: drone-runner
    image: drone/drone-runner-docker:1.6.3
    restart: unless-stopped
    depends_on:
      - drone
    environment:
      - DRONE_RPC_PROTO=https
      - DRONE_RPC_HOST=drone
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_NAME="${HOSTNAME}-runner"
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NETWORKS=traefik_reverse_proxy
      - DRONE_DEBUG=false
      - DRONE_TRACE=false
    ports:
      - "3002:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.drawio-runner.rule=Host(`drone-runner.{{ domain }}`)"
      - "traefik.http.routers.drawio-runner.entrypoints=websecure"
      - "traefik.http.routers.drawio-runner.tls.certresolver=myresolver"
      - "traefik.http.services.drawio-runner.loadbalancer.server.port=3000"
    networks:
      - traefik_reverse_proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  traefik_reverse_proxy:
    external: true
